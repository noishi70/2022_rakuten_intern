version: "3"
services:
  front:
    image: node:16
    volumes:
      - ./front:/usr/src
      - front_modules:/usr/src/node_modules #node_modulesはコンテナ内部で用意します
    working_dir: "/usr/src"
    command: sh -c "yarn && yarn build && yarn start"
    tty: true
    ports:
      - "3000:3000"
    environment:
      API_URL_SSR: "http://api:4000"
      NEXT_PUBLIC_API_URL: "http://localhost:4000"
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"

  api:
    container_name: api
    env_file: ./backend/.env
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ./backend/app:/app
    ports:
      - 4000:4000
    depends_on:
      - db

  db:
    image: mysql:8
    platform: linux/x86_64
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: reakuten_db
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_USER: reakuten
      MYSQL_PASSWORD: docker
      TZ: "Asia/Tokyo"
    volumes:
      - ./db/data:/var/lib/mysql #データ永続化
      - ./db/sql:/docker-entrypoint-initdb.d #起動時sqlフォルダ内のsqlファイルを実行

  nginx:
    build: ./server
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./front:/var/www/html
      - ./server/conf.d/nginx.conf:/etc/nginx/nginx.conf

volumes:
  front_modules:
  api_modules:
